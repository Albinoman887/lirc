
0.6.0: 04/02/00
  * SMP support for serial port driver
  * Milan Pikula has provided a driver for the SIR (serial infrared)
    mode of IrDA ports available in many notebooks
  * lirc_client is now a library
  * irxevent: new keyword:
     xy_Key <x_position> <y_position> [modifiers-]<key> <windowname>
  * finally added support of shift-encoded remotes to irrecord
  * got rid of lirmand, you no longer need it!
    if you update from lirc-0.5.4 you might want to modify the value
    of gap in your config file to make repeats work (or just record
    everything again)
  * added new feature to .lircrc config file:
    a program with name 'progname' will startup in mode 'progname' if
    such a mode is defined
  * now works on Alphas
  * added very simple noise filter to serial port driver
  * added TOGGLE_ACTIVATE directive to lircmd
  * renamed examples to contrib, added Debian 2.1 Slink init script
  * cleaned up lircmd.c
  * fixed bug in lirc_nextir()
  * implemented extended C escape codes in .lircrc
  * added IMPS/2 protocol to lircmd
  * fixed signal bug in lircd, lircmd
  * cleaned up parallel port driver: works great
  * reversed order of ChangeLog and renamed to NEWS
  * deleted all those nice new 0.5.4 Makefiles...
    we now do automake and autoconf (Tom Wheeley)
  * fixed memory leak in read_config()
  * read_config(): parser recognizes garbage at the end of valid lines
  * irrecord.c: 'begin','end' and names beginning with '#' are not allowed
    as button name
  * changed decoding code as last bit of pulse encoded remotes (e.g. SONY)
    can be significant
  * irrecord.c: small fix to make NO_HEAD_REP work
  * started to add support for TV cards
  * parport support for parallel port driver in 2.2.x kernels
    As I don't plan to upgrade my Linux box to 2.2.x very soon this code
    will stay untested until then.
  * lircd accepts some list commands, an example will be implemented in
    the next version of xrc; lircd sends a 'SIGHUP' string to all clients
    on SIGHUP
  * added new flag to support remote controls that also send a header
    before repeat codes


0.5.4: 02/26/99
  * fixed misbehaviour when header and repeat code is equal
  * added new flag to support AIWA remote controls correctly
  * parser is more pedantic regarding numbers
  * fixed a bug parsing flags
  * LONG_IR_CODE is now default
    There are more remote controls that send >32 bits than I thought.
  * fixed some bugs in sending code
  * minor changes to decoding code, I hope that everything else is still
    working
  * record now can convert config files in raw mode into normal config
    files
    These config files are much smaller and consume less memory.
    This is still experimental and will only work for space encoded remote
    controls.
  * added repeat_gap to support AnimaX remote controls correctly (only
    sending is affected)
  * As there have been some changes to the decoding code, I have added some
    code to simulate any remote control as long as I have a config file
    for it.
    So now I am quite sure that everything is still working with the
    already known remote controls because I now can test it. :-)
  * merged the device driver with Ben Pfaff's driver
  * some things done by me (Karsten Scheibler)
    - added documentation
    - rewrite of the Makefiles to make installation somewhat easier
    - new directory structure
  * fixed a nasty bug in serial port device driver
  * fixed sense autodetection problem in serial device driver (thanks
    to Eric Lammerts for the patch)
  * changed the name of record program to irrecord to avoid name conflicts
  * fixed another bug in serial port device driver, we must autodetect
    sense before requesting the IRQ
  * documentation-update
  * fixed (I hope) problem with irq_handler in the serial port device driver
  * changes to the serial port device driver to support the Animax remote
    control correctly 
  * added xmode2 and irxevent-0.4.2 to the tools directory (thanks to
    Heinrich Langos)


0.5.3: 11/23/98
  * changed type of ir_code to unsigned long for faster decoding on
    32-bit architectures. Change the define in the Makefile to get the
    old setting.
  * removed some inlines to reduce code size
  * changed config file format for all application programs
    The most important new features are:
    - one config file for all lirc applications possible
      You can still have different config files.
    - toggle buttons possible
    - button sequences are supported
    - different modes available for e.g. cd, mpg, tv, etc.
  * new program: smode2


0.5.2: 10/20/98
  * This version has been done by Pablo d'Angelo and me (Chistoph)
  * (changed by pablo) changed the config-files format for every application
    in the apps directory.
    You can specify the remote within the config files. '*' are allowed as 
    wildcards for button and remote now. (beware: the config file is parsed 
    from bottom to top, in case you use button='*')
  * added ACTIVATE direcitve to lircmd config file
    There is an example config file in contrib/lircmd.conf now.
  * added some Philips remote controls (thanks to Per-Henrik Persson)
  * shift encoded remote contols now work!
  * Pablo has added config file support to lircd
    The old header files still can be used for compatibility.
    As the header files and the format of the config files might change in
    further versions (yes, it has changed again in this version) you are only
    on the safe side if you send me header/config files for your remote
    controls that are not already part of this package.
  * both lircd and lircmd will re-read their config files an SIGHUP
  * added support for "raw mode" remote controls to lircd
    The IR signals are not decoded. Instead the output of the device driver
    is just recorded and kind of pattern matching is being done to
    recognize a IR signal.
    There is a new program in apps:
    record will create a lircd config file for your remote control in raw mode
    This also will work with remote contorls that do not use a known
    protocol for sending IR signals. There might be some limitations on this
    I am not aware of at the moment, but the only problem I can think of now
    are remote controls that use a repeat bit.
    You can still record the IR signals twice for each state of the repeat bit.
    This will give you good enough results, but this is not an elegant
    solution.


0.5.1: 09/05/98
  * configureable mouse daemon
  * minor bugfixes


0.5.0: 09/02/98
  * this is a complete rewrite of the daemon done by me (Christoph)
  * cleaned up the whole package
  * removed mouse stuff from daemon, somebody has to write a configureable
    mouse daemon...
  * the daemon has been rewritten in plain C,
    this should be much better to read
  * there is support for sending again
    you can download the software for sending via lirc from my homepage
    at http://fsinfo.cs.uni-sb.de/~columbus/lirc
  * the data structures for remotes have changed,
    adding new remotes should be much easier now
    at this time there is only support for my remote control
    further remote controls will be added if they are confirmed to work 
    with the new header files
  * by default the daemon writes into a logfile in /var/log/lircd
  * added irxevent for sending events to X application
    from Heinrich Langos (heinrich@null.net)


0.4.1: 06/05/98
  * The structures for the different remotes have been moved into their own
    header files, in the directory remotes.  The file remotes.h controls
    which ones get compiled in.
  * An additional remote (panasonic) thanks to Tommy Thorn
  * Some updates to the docs
  * Somes changes to make shift encoded remotes work better.  They still
    don't work right.  I don't have one of these remotes, so there isn't
    much I can do.


0.4: 02/25/98
  * Not official, done by me (Trent)
  * new mode in kernel driver, easier to use and more stable
  * Use UNIX domain socket rather than TCP socket for daemon
  * decoding is more robust
  * support for Packard Bell remotes, their repeat codes, and mouse control
  * support for my JVC and Pioneeer remotes
  * easier config file format, use names like MUTE, POWER instead of hex codes
  * new program irexec, run programs when you press buttons.
  * misc other fixes/changes
  * no transmitting stuff....


0.3: 07/21/96
  * some support for transmitting
  * cleaned up ir_remote
  * readir replaced by record


0.2: 05/15/96
  * remote recognition more flexible 
    for most remotes you only need to fill in a data table now
    see ir_remote.h and ir_remote.cc


0.1: 05/13/96
  * first release
